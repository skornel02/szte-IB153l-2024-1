@page
@using Microsoft.AspNetCore.Components
@model Backend.Pages.BakerPage.IndexModel
@{
    ViewData["Title"] = "Baker Page";
}


<h1 class="mb-4">Baker Page</h1>

<div class="row">
    @foreach (var item in Model.Products)
    {
        var maxNumberToMake = int.MaxValue;

        foreach (var ingredient in item.Ingredients)
        {
            var maxWithThisIngerdients = ingredient.Ingredient.Stock / ingredient.Quantity;
            var maxIntWithIngredient = Convert.ToInt32(Math.Floor(maxWithThisIngerdients));

            if (maxIntWithIngredient < maxNumberToMake)
            {
                maxNumberToMake = maxIntWithIngredient;
            }
        }

        var buttonDisabled = maxNumberToMake == 0;


        <div class="col-12 col-sm-6 col-md-4 col-lg-3">
            <div class="card">
                <img src="@item.ImageUrl" class="card-img-top position-relative" alt="@item.Description" />

                @if (maxNumberToMake == int.MaxValue)
                {
                    <span class="badge position-absolute end-0 text-dark bg-warning m-2 p-2">Max: ∞ pcs </span>
                }
                else
                {
                    <span class="badge position-absolute end-0 text-dark bg-warning m-2 p-2">Max: @maxNumberToMake pcs </span>
                }

                <div class="card-body">
                    <h5 class="card-title">@item.Name</h5>
                    <div class="form-group col-12 mb-2">
                        <p class="card-text">In stock: @item.Stock</p>
                    </div>

                    <div class="form-group">
                        <p class="card-text">Ingredients: </p>
                    </div>
                    <ul class="list-group list-group-flush mb-3">

                        @if (item.Ingredients.Count == 0)
                        {
                            <li class="list-group-item">
                                This product has no ingredients!
                            </li>
                        }

                        @foreach (var ingredient in item.Ingredients)
                        {
                            <li class="list-group-item">@ingredient.Ingredient.Name: @ingredient.Quantity  |  in stock: @ingredient.Ingredient.Stock</li>

                        }
                    </ul>

                    <div class="d-flex flex-column flex-md-row align-items-md-center gap-2">
                        <form method="post">
                            <div class="input-group mb-3">
                                <span class="input-group-text" id="numberToMake">Number of products</span>
                                <input asp-for="NumberToMake" type="number" class="form-control" aria-describedby="numberToMake" min="1" max="@maxNumberToMake" />
                                <span asp-validation-for="NumberToMake" class="text-danger"></span>
                            </div>
                            <div class="input-group ">
                                <input type="submit" class="btn btn-warning" value="Make product(s)" disabled="@buttonDisabled">

                                @if (buttonDisabled)
                                {
                                    <span class="text-danger">There is not enough ingredients!</span>
                                }
                            </div>
                            <div class="input-group ">
                                <input type="hidden" name="id" value="@item.Id" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }

</div>
