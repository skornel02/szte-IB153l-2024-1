@page
@model Backend.Pages.Orders.MyOrders.IndexModel

@{
    ViewData["Title"] = "My Orders";
}

<h1 class="mb-4">Your Orders</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (Model.Orders.Count == 0)
{
    <p class="text-danger">You have no orders at the moment.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th class="d-none d-md-table-cell">Identifier</th>
                <th>Product Name</th>
                <th>Qantity</th>
                <th>Price</th>
                <th>Date</th>
                <th>Order Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model.Orders)
            {
                <tr>
                    <td class="d-none d-md-flex flex-column align-content-center justify-items-center barcode-cell">
                        <img id="barcode-container-@order.Id" src="" class="barcode"/>
                        <span>@order.Id</span>
                    </td>
                    <td>
                        @foreach (var item in order.OrderItems)
                        {
                            <div>@item.Product.Name</div>
                        }
                    </td>
                    <td>
                        @foreach (var item in order.OrderItems)
                        {
                            <div>@item.Quantity</div>
                        }
                    </td>
                    <td>@order.TotalPrice.ToString("C", new System.Globalization.CultureInfo("fr-FR"))</td>
                    <td>@order.OrderPlaced.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>@order.Status.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts {
    <script>var exports = {"__esModule": true};</script>
    <script src="https://cdn.jsdelivr.net/npm/barcode-tool@1.1.1/dist/cjs/index.js">
    </script>

    <script>
        const onLoad = async () => {
            const barcodeCells = document.querySelectorAll('.barcode-cell');

            for (const cell of barcodeCells) {
                const orderIdCell = cell.querySelector('span');
                const orderId = orderIdCell.innerText;
                const barcodeContainer = cell.querySelector('img');
                const barcodeContainerId = barcodeContainer.id;

                const payload = { elementId: barcodeContainerId, value: orderId };
                const options = {};

                generateBarcode(payload, options);

                orderIdCell.remove();
            }
        }

        $(document).ready(onLoad);
    </script>
}

