@page
@model Backend.Pages.Ingredients.IndexModel

@{
    ViewData["Title"] = "Ingredients";

    int counter = 0;
}

<div class="row align-items-center">
    <div class="col-12 col-md-3">
        <h1>Alapanyagok</h1>
    </div>
    <div class="col-12 col-md">
        <a class="btn btn-warning" role="button" asp-page="Create">Új alapanyag</a>
    </div>
</div>

<div class="table-responsive-md mt-4">
    <table class="table" style="min-width: 512px">
        <thead>
            <tr>
                <th scope="col">
                    #
                </th>
                <th scope="col">
                    Megnevezés
                </th>
                <th scope="col">
                    Maximum raktár
                </th>
                <th scope="col">
                    Raktáron
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.IngredientEntitys.Any())
            {
                @foreach (var item in Model.IngredientEntitys.OrderBy(i => i.Name))
                {
                    counter++;
                    <tr class="align-middle">
                        <th scope="row">
                            @counter
                        </th>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MaxStock)
                        </td>
                        <td>
                            
                            <div class="d-flex justify-content-between">
                                @Html.DisplayFor(modelItem => item.Stock)
                                <input type="range" class="form-range w-75" value="@item.Stock"
                                       min="0" max="@item.MaxStock" step="1"
                                       data-bs-toggle="tooltip" data-bs-placement="top"
                                       data-bs-title="@item.Stock"
                                       onchange="updateStock(event, '@item.Id')"
                                       oninput="updateTooltip(event)">
                            </div>
                        </td>
                        <td>
                            <div class="d-flex justify-content-center">
                                <a asp-page="./Delete" asp-route-id="@item.Id" class="link-danger text-decoration-none fs-3">
                                    <i class="bi bi-trash-fill"></i>
                                </a>
                                &nbsp;
                                <a asp-page="./Edit" asp-route-id="@item.Id" class="text-decoration-none fs-3">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                            </div>

                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5">
                        No ingredients found!
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<script>
    function updateStock(event, id) {
        const newStock = event.target.value;
        $.ajax({
            url: `/api/ingredients`,
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ id, stock: newStock }),
            success: function (result) {
                window.location.href = window.location.pathname + "?" + $.param({ 'updated': id })
            },
            error: function (error) {
                window.location.href = window.location.pathname + "?" + $.param({ 'failed': id })
            }
        });
    }

    function updateTooltip(event) {
        const newStock = event.target.value;
        event.target.setAttribute("data-bs-original-title", newStock);
        var tooltip = bootstrap.Tooltip.getInstance(event.target);
        if (tooltip) {
            tooltip._config.animation = false;
            tooltip.setContent({ '.tooltip-inner': newStock});
        }
    }
</script>